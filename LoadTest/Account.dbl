;;*****************************************************************************
;;
;; Title:       Account.dbl
;;
;; Description: Data model representing data defined by the repository
;;              structure AccountS and from the data file DAT:Accounts.ism.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import System
import System.Collections.Generic
import System.ComponentModel.DataAnnotations
import System.Text
import Harmony.Core
import Harmony.Core.Converters
import Harmony.Core.Context
import Harmony.Core.FileIO
import Microsoft.Extensions.DependencyInjection
import System.Runtime.Serialization

namespace LoadTest.Models

    public partial class Account extends DataObjectBase

        ;;make the record available and a copy
        private mSynergyData, strAccount
        private mOriginalSynergyData, strAccount
        private mGlobalRFA, a10
        private static sMetadata, @AccountMetadata

.region "Constructors"

        static method Account
        proc
            sMetadata = new AccountMetadata()
            DataObjectMetadataBase.MetadataLookup.TryAdd(^typeof(Account), sMetadata)
        endmethod

        ;;; <summary>
        ;;;  Constructor, initialise the base fields
        ;;; </summary>
        public method Account
            parent()
        proc
            init mSynergyData, mOriginalSynergyData
        endmethod

        ;;; <summary>
        ;;;  Alternate Constructor, accepts the structured data
        ;;; </summary>
        public method Account
            required in inData, strAccount
            parent()
        proc
            mSynergyData = mOriginalSynergyData = inData
        endmethod

.endregion

.region "Attributes of this entity"

        ;;; <summary>
        ;;; Account number
        ;;; </summary>
        {Key}
        {Required(ErrorMessage="Account number is required. ")}
        public property AccountNumber, int
            method get
            proc
                mreturn (int)mSynergyData.AccountNumber
            endmethod
            method set
            proc
                mSynergyData.AccountNumber = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; Credit limit
        ;;; </summary>
        public property Balance, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.Balance, ^null, "DECIMALPLACES#2", ^null)
            endmethod
            method set
            proc
                mSynergyData.Balance = value
            endmethod
        endproperty

.endregion

.region "Other attributes"

        ;;; <summary>
        ;;; Expose the complete synergy record
        ;;; </summary>
        public override property SynergyRecord, a
            method get
            proc
                mreturn mSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Expose the complete original synergy record
        ;;; </summary>
        public override property OriginalSynergyRecord, a
            method get
            proc
                mreturn mOriginalSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Metadata describing the public field properties
        ;;; </summary>
        public override property Metadata, @DataObjectMetadataBase
            method get
            proc
                mreturn sMetadata
            endmethod
        endproperty

        public override property GlobalRFA, [#]byte
            method get
            proc
                mreturn mGlobalRFA
            endmethod
            method set
            proc
                mGlobalRFA = value
            endmethod
        endproperty

.endregion

.region "Public methods"

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalSynergyRecord, void
            targetMethod, @AlphaAction
        proc
            targetMethod(mSynergyData, mGlobalRFA)
        endmethod

        ;;; <summary>
        ;;; Allow the host to validate all fields. Each field will fire the validation method.
        ;;; </summary>
       ;; public override method InitialValidateData, void
        ;;proc
        ;;endmethod

        public override method Validate, void
            required in vType, ValidationType
            required in sp, @IServiceProvider
        proc
            ;;No relation validation if the record is being deleted
            if (vType == ValidationType.Delete)
                mreturn

            ;;Get an instance of IDataObjectProvider
            data dataObjectProvider, @IDataObjectProvider, sp.GetService<IDataObjectProvider>()

            ;;--------------------------------------------------------------------------------
            ;;Validate data for relation 1 (REL_Vendor)

            ;;Validation mode: None

            ;;--------------------------------------------------------------------------------
            ;;Validate data for relation 2 (REL_OrderItems)

            ;;Validation mode: None

            ;;--------------------------------------------------------------------------------
            ;;If we have a ValidateCustom method, call it

            ValidateCustom(vType,sp)

        endmethod

        private partial method ValidateCustom, void
            required in vType, ValidationType
            required in sp, @IServiceProvider
        endmethod

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalGetValues, [#]@object
        proc
            ;;TODO: This should be returning boxed values for each of our fields
            mreturn new Object[13]
        endmethod

.endregion

.region "Relationships to other entities"


.endregion

.region "Properties to represent keys"

        ;;Access keys

        private _KEY_Account_NUMBER, string, ""
        public readonly property KEY_Account_NUMBER, string, ""

.endregion

    endclass

endnamespace
